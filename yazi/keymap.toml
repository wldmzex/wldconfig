[manager]
prepend_keymap = [
  # Movement
  { on = "n", run = "leave", desc = "Move cursor down 1 row"},
  { on = "i", run = "plugin smart-enter", desc = "Move cursor down 1 row"},
  { on = "u", run = "arrow -1", desc = "Move cursor down 1 row"},
  { on = "U", run = "arrow -5", desc = "Move cursor down 5 rows"},
  { on = "<C-u>", run = "arrow -50%", desc = "Move cursor up half page"},
  { on = "e", run = "arrow 1", desc = "Move cursor up 1 row"},
  { on = "E", run = "arrow 5", desc = "Move cursor up 5 rows"},
  { on = "<C-E>", run = "arrow 50%", desc = "Move cursor up half page"},
  { on = ["g", "u"], run = "arrow top", desc = "Move cursor to the top" },
  { on = ["g", "e"], run = "arrow bot", desc = "Move cursor to the Bottom" },
  #{ on = "S", run = 'suspend' },
  { on = "S", run = 'shell "$SHELL" --block --confirm' },
  #FAST DIRECTORY Movement
  { on = ["g", "d"], run = "cd ~/Downloads", desc = "GO 2 browser Downloads" },
  { on = ["g", "T"], run = "cd /wldstorage/downloads/transmission/complete/", desc = "GO 2 transmission Downloads" },
  { on = ["g", "f"], run = "cd ~/EmbeddedProject", desc = "GO 2 EmbeddedProject" },
  { on = ["g", "s"], run = "cd ~/Software_Project/", desc = "GO 2 Software_Project" },
  { on = ["g", "S"], run = "cd /wldstorage/Nginx_Share/SHARE/", desc = "GO 2 Share" },
  { on = ["g", "m"], run = "cd /wldstorage/Documents", desc = "GO 2 Documents " },
  { on = ["g", "w"], run = "cd ~/WebProjects/", desc = "GO 2 Web project " },
  { on = ["g", "b"], run = "cd ~/BackEndProject/", desc = "GO 2 BackEndProject project " },
  { on = ["g", "k"], run = "cd ~/Kicad_project/", desc = "GO 2 wldKicadDir" },
  { on = ["g", "p"], run = "cd ~/Pictures/", desc = "GO 2 Pictures" },
  { on = ["g","L"], run = "cd ~/IDK_Learning/", desc = "GO 2 wldEmbeddedLib" },
  { on = ["g","l", "e"], run = "cd ~/EmbeddedProject/wldembeddeddriver/", desc = "GO 2 wldEmbeddedLib" },
  { on = ["g","l", "k"], run = "cd ~/Kicad_project/Lib/", desc = "GO 2 wldKicadLib" },
  { on = ["g","l", "y"], run = "cd ~/.config/yazi/", desc = "GO 2 Yazi Config" },
  { on = ["g","l", "l"], run = "cd ~/wldLaboratoryLog/", desc = "GO 2 wldLaboratoryLog" },
  #FINDER
  #Tab_Management
  { on = "1", run = "tab_switch 0", desc = "Switch to the first tab" },
	{ on = "2", run = "tab_switch 1", desc = "Switch to the second tab" },
	{ on = "3", run = "tab_switch 2", desc = "Switch to the third tab" },
	{ on = "4", run = "tab_switch 3", desc = "Switch to the fourth tab" },
	{ on = "5", run = "tab_switch 4", desc = "Switch to the fifth tab" },
	{ on = "6", run = "tab_switch 5", desc = "Switch to the sixth tab" },
	{ on = "7", run = "tab_switch 6", desc = "Switch to the seventh tab" },
	{ on = "8", run = "tab_switch 7", desc = "Switch to the eighth tab" },
	{ on = "9", run = "tab_switch 8", desc = "Switch to the ninth tab" },
	{ on = ["t","a"], run = "tab_create --current", desc = "create new tab" },
	{ on = ["t","d"], run = "tab_close --current", desc = "Close current tab" },
  #Task_Management
  { on = ["T", "T"], run = "tasks_show", desc = "Show Current Tasks" },
  #Operation Y-copy
  { on = ["y", "y"], run = "yank", desc = "Yank selected files (copy)" },
	{ on = ["y", "p"], run = "copy path", desc = "Copy the file path" },
	{ on = ["y", "d"], run = "copy dirname", desc = "Copy the directory path" },
	{ on = ["y", "f"], run = "copy filename", desc = "Copy the filename" },
	{ on = ["y", "n"], run = "copy name_without_ext", desc = "Copy the filename without extension" },
	{ on = ["y", "c"], run = "unyank", desc = "Cancel the yank status" },
  # Operation: P
	{ on = ["p", "p"], run = "paste", desc = "Paste yanked files" },
	{ on = ["p", "P"], run = "paste --force", desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = ["p", "l"], run = "link", desc = "Symlink the absolute path of yanked files" },
	{ on = ["p", "L"], run = "link --relative", desc = "Symlink the relative path of yanked files" },
	{ on = ["p", "h"], run = "hardlink", desc = "Hardlink yanked files" },
  # Operation: 
	{ on = "<C-h>", run = "hidden toggle", desc = "File Hidden toggle" },
	{ on = "A", run = "create --dir", desc = "Create directory" },
	{ on = ["d","D"], run = "remove", desc = "Trash file" },
	{ on = ["d","d"], run = "yank --cut", desc = "Cut file" },
]
